#!/usr/bin/env bash
#
# rwahs/tasks/nuke - Function definitions for "nuke" task.
#

set -e
set -u

function nuke_showHelp {
    local programName toolsDir

    # Function arguments
    programName="${1}"
    toolsDir="${2}"
    shift 2

    echo
    echo "Remove all data from the database, restoring it to a clean state following a fresh installation of the"
    echo "current profile (i.e. the profile most recently deployed to the given environment)."
    echo
    echo "USAGE:"
    echo "    ${programName} nuke [-e <environment>]"
    echo
    echo "WHERE:"
    echo "    -e <environment> gives the name of the environment to nuke."
    echo "         Valid values: $(ls -m "${toolsDir}/config/${programName}/env")"
    echo
}

function nuke_runTask {
    local programName toolsDir environment error
    local repo repoDefaultTargetCommitish targetParent
    local host user targetRoot adminEmailAddress

    # Function arguments
    programName="${1}"
    toolsDir="${2}"
    shift 2

    # Default values
    environment=${RWAHS_ENV-}

    # Parse parameters
    while getopts :e: parameter; do
        case "$parameter" in
            e)
                environment="${OPTARG}"
            ;;
            \?)
                echo "Error: Invalid option '-${OPTARG}' provided to the 'nuke' task." >&2
                nuke_showHelp "${programName}" "${toolsDir}" >&2
                exit 1
            ;;
            :)
                echo "Error: Option '-${OPTARG}' missing parameter value." >&2
                nuke_showHelp "${programName}" "${toolsDir}" >&2
                exit 1
            ;;
        esac
    done

    # Check for errors and required executables
    if [ ! -v environment ]; then
        error="Required parameter 'environment' not specified for 'nuke' task."
    elif [ ! -f "${toolsDir}/config/${programName}/env/${environment}" ]; then
        error="Specified environment '${environment}' does not exist, see below for valid values."
    elif [ ! -v COLLECTIVEACCESS_HOME ]; then
        error="The COLLECTIVEACCESS_HOME environment variable is not set, this is required for the 'nuke' task."
    elif [ ! -f "${COLLECTIVEACCESS_HOME}/support/bin/caUtils" ]; then
        error="The COLLECTIVEACCESS_HOME environment variable does not refer to a valid providence installation."
    fi

    # Display error and usage if any error occurred
    if [ -v error ]; then
        echo "${error}" >&2
        nuke_showHelp "${programName}" "${toolsDir}" >&2
        exit 1
    fi

    # Import the environment settings and the "profile" component settings
    source "${toolsDir}/config/${programName}/env/${environment}"
    source "${toolsDir}/config/${programName}/components/profile"

    # Do the work
    echo "Running 'nuke' task..."
    echo ${COLLECTIVEACCESS_HOME}/support/bin/caUtils install \
        --profile-directory "${targetRoot}/${targetParent}/current" \
        --profile-name "rwahs" \
        --admin-email "${adminEmailAddress}" \
        --overwrite
}
